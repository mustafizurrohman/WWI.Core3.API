// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WWI.Core3.Models.DatabaseContext;

namespace WWI.Core3.Models.Migrations
{
    [DbContext(typeof(DocAppointmentContext))]
    [Migration("20200509054053_HospitalDoctorManyToMany")]
    partial class HospitalDoctorManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WWI.Core3.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Middlename")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SpecialityID")
                        .HasColumnType("int");

                    b.HasKey("DoctorID");

                    b.HasIndex("SpecialityID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("WWI.Core3.Models.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("WWI.Core3.Models.Models.Hospital", b =>
                {
                    b.Property<int>("HospitalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.HasKey("HospitalID");

                    b.HasIndex("AddressID");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("WWI.Core3.Models.Models.HospitalDoctor", b =>
                {
                    b.Property<int>("HospitalDoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<int>("HospitalID")
                        .HasColumnType("int");

                    b.HasKey("HospitalDoctorID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("HospitalID");

                    b.ToTable("HospitalDoctors");
                });

            modelBuilder.Entity("WWI.Core3.Models.Speciality", b =>
                {
                    b.Property<int>("SpecialityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SpecialityID");

                    b.ToTable("Specialities");

                    b.HasData(
                        new
                        {
                            SpecialityID = 1,
                            Name = "Pediatrics"
                        },
                        new
                        {
                            SpecialityID = 2,
                            Name = "Anesthesiology"
                        },
                        new
                        {
                            SpecialityID = 3,
                            Name = "Dermatology"
                        });
                });

            modelBuilder.Entity("WWI.Core3.Models.Doctor", b =>
                {
                    b.HasOne("WWI.Core3.Models.Speciality", "Speciality")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecialityID");
                });

            modelBuilder.Entity("WWI.Core3.Models.Models.Hospital", b =>
                {
                    b.HasOne("WWI.Core3.Models.Models.Address", "Address")
                        .WithMany("Hospitals")
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("WWI.Core3.Models.Models.HospitalDoctor", b =>
                {
                    b.HasOne("WWI.Core3.Models.Models.Hospital", "Hospital")
                        .WithMany("Doctors")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WWI.Core3.Models.Doctor", "Doctor")
                        .WithMany("Hospitals")
                        .HasForeignKey("HospitalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
